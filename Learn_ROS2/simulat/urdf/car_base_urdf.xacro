<!-- 底盘实现 -->
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
    <xacro:property name="PI" value="3.1415926" />

    <xacro:property name="car_length" value="0.2" />
    <xacro:property name="car_width" value="0.12" />
    <xacro:property name="car_height" value="0.07" />

    <xacro:property name="wheel_radius" value="0.025" />
    <xacro:property name="wheel_length" value="0.02" />

    <xacro:property name="wheel_joint_x" value="0.08" />
    <xacro:property name="wheel_joint_y" value="${car_width / 2}" />
    <xacro:property name="wheel_joint_z" value="${-(car_height / 2 + distance - wheel_radius)}" />

    <xacro:property name="distance" value="0.015" />

    <material name="yellow">
        <color rgba="0.9 0.6 0.0 0.5"/>
    </material>
    <material name="black">
        <color rgba="0.0 0.0 0.0 0.5"/>
    </material>
    <material name="lucency">
        <color rgba="0.0 0.0 0.0 0.0"/>
    </material>

    <link name="base_footprint">
        <!-- 形状描述 -->
        <visual>
            <geometry>
                <box size="0.001 0.001 0.001"/>
            </geometry>
            <material name="lucency"/>
        </visual>
        <!-- 碰撞描述 -->
        <collision>
            <geometry>
                <box size="0.001 0.001 0.001"/>
            </geometry>
        </collision>
        <!-- 物理信息 -->
        <inertial>
            <mass value="0.001"/>
            <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>   
        </inertial>
    </link>

    <link name="base_link">
        <!-- 形状描述 -->
        <visual>
            <geometry>
                <box size="${car_length} ${car_width} ${car_height} "/>
            </geometry>
            <material name="yellow"/>
        </visual>
        <!-- 碰撞描述 -->
        <collision>
            <geometry>
                <box size="${car_length} ${car_width} ${car_height} "/>
            </geometry>
        </collision>
        <!-- 物理信息 -->
        <inertial>
            <mass value="0.5"/>
            <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/> 
        </inertial>
    </link>

    <joint name="base_link2base_footprint" type="fixed">
        <parent link="base_footprint"/>
        <child link="base_link"/>
        <origin xyz="0.0 0.0 ${car_height / 2 + distance}"/>
    </joint>

    <xacro:macro name="wheel_func" params="link_name front_flag left_flag">
        <link name="${link_name}">
            <visual>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
                </geometry>
                <material name="black"/>
                <origin rpy="1.57 0.0 0.0"/>
            </visual>

            <collision>
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
                </geometry>
            </collision>

            <inertial>
                <mass value="0.1"/>
                <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
            </inertial>
        </link>
        <joint name="${link_name}2base_link" type="continuous">
            <parent link="base_link"/>
            <child link="${link_name}"/>
            <origin xyz="${wheel_joint_x * front_flag} ${wheel_joint_y * left_flag} ${wheel_joint_z}"/>
            <axis xyz="0 1 0"/>
        </joint>
    </xacro:macro>

    <xacro:wheel_func link_name="front_left" front_flag="1" left_flag="1" />
    <xacro:wheel_func link_name="front_right" front_flag="1" left_flag="-1" />
    <xacro:wheel_func link_name="back_left" front_flag="-1" left_flag="1" />
    <xacro:wheel_func link_name="back_right" front_flag="-1" left_flag="-1" />

    <xacro:macro name="wheel_gazebo_func" params="link_name">
        <gazebo reference="${link_name}_gazebo">
            <mu1>0.5</mu1>
            <mu2>0.5</mu2>
            <kp>5000000.0</kp>
            <kd>10.0</kd>
            <minDepth>0.001</minDepth>
            <maxVel>1.0</maxVel>
            <fdir1>1 0 0</fdir1>
            <material>Gazebo/DarkGrey</material>
        </gazebo>
    </xacro:macro>

    <xacro:wheel_gazebo_func link_name="front_left" />
    <xacro:wheel_gazebo_func link_name="front_right" />
    <xacro:wheel_gazebo_func link_name="back_left" />
    <xacro:wheel_gazebo_func link_name="back_right" />

    <gazebo reference = "base_link">
        <material>Gazebo/DarkGrey</material>
    </gazebo>
        
   <!-- 麦轮控制器 -->
    <gazebo>
        <plugin name="mecanum_controller" filename="libgazebo_ros_planar_move.so">
            <commandTopic>cmd_vel</commandTopic>
            <odometryTopic>odom</odometryTopic>
            <odometryFrame>odom</odometryFrame>
            <leftFrontJoint>front_left2base_link</leftFrontJoint>
            <rightFrontJoint>front_right2base_link</rightFrontJoint>
            <leftRearJoint>back_left2base_link</leftRearJoint>
            <rightRearJoint>back_right2base_link</rightRearJoint>
            <odometryRate>100</odometryRate>
            <robotBaseFrame>base_footprint</robotBaseFrame>
            <broadcastTF>1</broadcastTF>
        </plugin>
    </gazebo>

</robot>